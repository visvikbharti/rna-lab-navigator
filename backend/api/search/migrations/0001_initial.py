# Generated by Django 4.2.10 on 2025-05-18 19:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SearchFacet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("display_name", models.CharField(max_length=100)),
                (
                    "field_path",
                    models.CharField(
                        help_text="Path to the field in Weaviate schema", max_length=100
                    ),
                ),
                (
                    "facet_type",
                    models.CharField(
                        choices=[
                            ("categorical", "Categorical"),
                            ("numerical", "Numerical Range"),
                            ("temporal", "Date/Time Range"),
                            ("hierarchical", "Hierarchical"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional configuration for this facet",
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order for display in the UI"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, help_text="Whether to show this facet by default"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Search Facet",
                "verbose_name_plural": "Search Facets",
                "ordering": ["display_order", "display_name"],
            },
        ),
        migrations.CreateModel(
            name="SearchRankingProfile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "use_hybrid",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to use hybrid search (vector + keyword)",
                    ),
                ),
                (
                    "hybrid_alpha",
                    models.FloatField(
                        default=0.75, help_text="Weight for vector search (0-1)"
                    ),
                ),
                (
                    "doc_type_weights",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Weight multipliers for different doc types",
                    ),
                ),
                (
                    "recency_boost",
                    models.FloatField(
                        default=0.0, help_text="Boost for more recent documents (0-1)"
                    ),
                ),
                (
                    "use_reranking",
                    models.BooleanField(
                        default=True, help_text="Whether to use cross-encoder reranking"
                    ),
                ),
                (
                    "reranking_factor",
                    models.FloatField(
                        default=1.0, help_text="Weight for reranking scores"
                    ),
                ),
                (
                    "results_limit",
                    models.PositiveIntegerField(
                        default=10, help_text="Default number of results to return"
                    ),
                ),
                (
                    "include_figures",
                    models.BooleanField(
                        default=True, help_text="Whether to include figures in results"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, help_text="Whether this is the default profile"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "usage_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times this profile has been used",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Search Ranking Profile",
                "verbose_name_plural": "Search Ranking Profiles",
            },
        ),
        migrations.CreateModel(
            name="SearchFilter",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "filter_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic Filter"),
                            ("complex", "Complex Filter"),
                            ("semantic", "Semantic Filter"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "filter_criteria",
                    models.JSONField(
                        help_text="JSON object describing filter criteria"
                    ),
                ),
                (
                    "is_system",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a system-defined filter",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Search Filter",
                "verbose_name_plural": "Search Filters",
                "unique_together": {("name", "created_by")},
            },
        ),
        migrations.CreateModel(
            name="SavedSearch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("query_text", models.TextField(blank=True)),
                (
                    "parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional search parameters",
                    ),
                ),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "filters",
                    models.ManyToManyField(blank=True, to="api_search.searchfilter"),
                ),
                (
                    "ranking_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api_search.searchrankingprofile",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="saved_searches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Saved Search",
                "verbose_name_plural": "Saved Searches",
                "unique_together": {("name", "user")},
            },
        ),
        migrations.CreateModel(
            name="QuerySuggestion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query_text", models.CharField(max_length=512, unique=True)),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Optional category for grouping suggestions",
                        max_length=50,
                    ),
                ),
                (
                    "doc_type",
                    models.CharField(
                        blank=True,
                        help_text="Document type this query is most relevant for",
                        max_length=50,
                    ),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of times this query has been used"
                    ),
                ),
                (
                    "success_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of successful answers (confidence > 0.6)",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_curated",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is a manually curated suggestion",
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to feature this suggestion prominently",
                    ),
                ),
                (
                    "avg_confidence",
                    models.FloatField(
                        default=0.0, help_text="Average confidence score for this query"
                    ),
                ),
                (
                    "avg_feedback_rating",
                    models.FloatField(
                        blank=True, help_text="Average user feedback rating", null=True
                    ),
                ),
                (
                    "recent_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Usage count in the last 7 days"
                    ),
                ),
                (
                    "recent_success_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Success count in the last 7 days"
                    ),
                ),
                (
                    "trending_score",
                    models.FloatField(
                        default=0.0,
                        help_text="Score indicating how trending this query is",
                    ),
                ),
            ],
            options={
                "verbose_name": "Query Suggestion",
                "verbose_name_plural": "Query Suggestions",
                "indexes": [
                    models.Index(
                        fields=["query_text"], name="api_search__query_t_2a9f31_idx"
                    ),
                    models.Index(
                        fields=["doc_type"], name="api_search__doc_typ_cdb231_idx"
                    ),
                    models.Index(
                        fields=["usage_count"], name="api_search__usage_c_d0da73_idx"
                    ),
                    models.Index(
                        fields=["trending_score"], name="api_search__trendin_f10726_idx"
                    ),
                    models.Index(
                        fields=["is_featured"], name="api_search__is_feat_ada1ce_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="QueryCompletion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "prefix",
                    models.CharField(
                        db_index=True,
                        help_text="The query prefix for autocompletion",
                        max_length=100,
                    ),
                ),
                (
                    "completion",
                    models.CharField(
                        help_text="The suggested completion", max_length=512
                    ),
                ),
                (
                    "frequency",
                    models.PositiveIntegerField(
                        default=1, help_text="How often this completion appears"
                    ),
                ),
                (
                    "doc_type",
                    models.CharField(
                        blank=True,
                        help_text="Document type this completion is most relevant for",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Query Completion",
                "verbose_name_plural": "Query Completions",
                "indexes": [
                    models.Index(
                        fields=["prefix"], name="api_search__prefix_476e00_idx"
                    ),
                    models.Index(
                        fields=["frequency"], name="api_search__frequen_be5824_idx"
                    ),
                ],
                "unique_together": {("prefix", "completion")},
            },
        ),
        migrations.CreateModel(
            name="SearchAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query_text", models.TextField()),
                (
                    "session_id",
                    models.CharField(
                        blank=True,
                        help_text="Session identifier for anonymous users",
                        max_length=100,
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("doc_type", models.CharField(blank=True, max_length=50)),
                ("use_hybrid", models.BooleanField(default=True)),
                ("hybrid_alpha", models.FloatField(blank=True, null=True)),
                (
                    "applied_filters",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Filters applied to this search",
                    ),
                ),
                (
                    "applied_facets",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Facets applied to this search",
                    ),
                ),
                (
                    "num_results",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of results returned"
                    ),
                ),
                (
                    "top_doc_types",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Document types in top results",
                    ),
                ),
                (
                    "answer_generated",
                    models.BooleanField(
                        default=True, help_text="Whether an answer was generated"
                    ),
                ),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                (
                    "result_selected",
                    models.BooleanField(
                        blank=True,
                        help_text="Whether the user selected a result",
                        null=True,
                    ),
                ),
                (
                    "time_to_first_click",
                    models.PositiveIntegerField(
                        blank=True, help_text="Time to first click in ms", null=True
                    ),
                ),
                (
                    "search_time_ms",
                    models.PositiveIntegerField(
                        blank=True, help_text="Time taken for search in ms", null=True
                    ),
                ),
                (
                    "reranking_time_ms",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Time taken for reranking in ms",
                        null=True,
                    ),
                ),
                (
                    "answer_time_ms",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Time taken for answer generation in ms",
                        null=True,
                    ),
                ),
                (
                    "query_history",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.queryhistory",
                    ),
                ),
                (
                    "ranking_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api_search.searchrankingprofile",
                    ),
                ),
                (
                    "saved_search",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api_search.savedsearch",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Search Analytics",
                "verbose_name_plural": "Search Analytics",
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="api_search__timesta_9a80ce_idx"
                    ),
                    models.Index(
                        fields=["query_text"], name="api_search__query_t_3dad4a_idx"
                    ),
                    models.Index(
                        fields=["doc_type"], name="api_search__doc_typ_4de722_idx"
                    ),
                ],
            },
        ),
    ]
