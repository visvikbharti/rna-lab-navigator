# Generated by Django 4.2.10 on 2025-05-18 19:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DailyMetricAggregate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True)),
                ("total_queries", models.PositiveIntegerField(default=0)),
                ("unique_users", models.PositiveIntegerField(default=0)),
                ("avg_response_time", models.FloatField(blank=True, null=True)),
                ("avg_confidence_score", models.FloatField(blank=True, null=True)),
                ("cache_hit_rate", models.FloatField(blank=True, null=True)),
                ("error_count", models.PositiveIntegerField(default=0)),
                ("pii_detection_count", models.PositiveIntegerField(default=0)),
                ("document_views", models.PositiveIntegerField(default=0)),
                ("document_uploads", models.PositiveIntegerField(default=0)),
                ("positive_feedback_count", models.PositiveIntegerField(default=0)),
                ("negative_feedback_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="SystemStatusLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "component",
                    models.CharField(
                        choices=[
                            ("api", "API Server"),
                            ("db", "Database"),
                            ("vector_db", "Vector Database"),
                            ("celery", "Celery Worker"),
                            ("redis", "Redis Cache"),
                            ("llm", "Language Model"),
                            ("embedding", "Embedding Model"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("healthy", "Healthy"),
                            ("degraded", "Degraded"),
                            ("down", "Down"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("message", models.TextField(blank=True)),
                ("details", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["component"], name="api_analyti_compone_e4e887_idx"
                    ),
                    models.Index(
                        fields=["status"], name="api_analyti_status_a12fc6_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="api_analyti_timesta_bae3b7_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SystemMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("response_time", "Response Time"),
                            ("cpu_usage", "CPU Usage"),
                            ("memory_usage", "Memory Usage"),
                            ("db_query_time", "Database Query Time"),
                            ("vector_search_time", "Vector Search Time"),
                            ("llm_generation_time", "LLM Generation Time"),
                            ("embedding_generation_time", "Embedding Generation Time"),
                            ("cache_hit_rate", "Cache Hit Rate"),
                            ("error_rate", "Error Rate"),
                        ],
                        max_length=50,
                    ),
                ),
                ("value", models.FloatField()),
                ("unit", models.CharField(default="ms", max_length=20)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("metadata", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["metric_type"], name="api_analyti_metric__8bbd86_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="api_analyti_timesta_dd0416_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="QueryTypeAggregate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=50)),
                ("date", models.DateField()),
                ("count", models.PositiveIntegerField(default=0)),
                ("avg_confidence", models.FloatField(blank=True, null=True)),
                ("examples", models.JSONField(blank=True, default=list)),
            ],
            options={
                "ordering": ["-date", "category"],
                "indexes": [
                    models.Index(
                        fields=["category"], name="api_analyti_categor_85289f_idx"
                    ),
                    models.Index(fields=["date"], name="api_analyti_date_0a4514_idx"),
                ],
                "unique_together": {("category", "date")},
            },
        ),
        migrations.CreateModel(
            name="UserActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("query", "Query"),
                            ("document_view", "Document View"),
                            ("document_upload", "Document Upload"),
                            ("feedback", "Feedback"),
                            ("setting_change", "Setting Change"),
                            ("admin_action", "Admin Action"),
                        ],
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("session_id", models.CharField(blank=True, max_length=128, null=True)),
                (
                    "resource_id",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "resource_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("status", models.CharField(default="success", max_length=20)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="activity_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user"], name="api_analyti_user_id_5e6a5a_idx"
                    ),
                    models.Index(
                        fields=["activity_type"], name="api_analyti_activit_31a340_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="api_analyti_timesta_8227ad_idx"
                    ),
                    models.Index(
                        fields=["session_id"], name="api_analyti_session_1a0583_idx"
                    ),
                    models.Index(
                        fields=["resource_type"], name="api_analyti_resourc_01565a_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login_failure", "Login Failure"),
                            ("access_denied", "Access Denied"),
                            ("pii_detected", "PII Detected"),
                            ("security_scan", "Security Scan"),
                            ("configuration_change", "Security Configuration Change"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("rate_limit_warning", "Rate Limit Warning"),
                            ("rate_limit_exceeded", "Rate Limit Exceeded"),
                            ("rate_limit_blocked", "Rate Limit Blocked"),
                        ],
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        default="warning",
                        max_length=20,
                    ),
                ),
                ("details", models.JSONField(blank=True, default=dict)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolution_notes", models.TextField(blank=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="security_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["event_type"], name="api_analyti_event_t_1d30d5_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="api_analyti_timesta_cc68bc_idx"
                    ),
                    models.Index(
                        fields=["severity"], name="api_analyti_severit_4e26cf_idx"
                    ),
                    models.Index(
                        fields=["is_resolved"], name="api_analyti_is_reso_d22274_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AuditEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("authentication", "Authentication"),
                            ("authorization", "Authorization"),
                            ("data_access", "Data Access"),
                            ("data_modification", "Data Modification"),
                            ("security_setting", "Security Setting Change"),
                            ("system_operation", "System Operation"),
                            ("user_management", "User Management"),
                            ("pii_detection", "PII Detection"),
                        ],
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        default="info",
                        max_length=20,
                    ),
                ),
                ("details", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["event_type"], name="api_analyti_event_t_450234_idx"
                    ),
                    models.Index(
                        fields=["user"], name="api_analyti_user_id_55da64_idx"
                    ),
                    models.Index(
                        fields=["timestamp"], name="api_analyti_timesta_7eb179_idx"
                    ),
                    models.Index(
                        fields=["severity"], name="api_analyti_severit_9f9db1_idx"
                    ),
                ],
            },
        ),
    ]
